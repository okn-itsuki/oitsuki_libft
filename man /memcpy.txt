MEMCPY(3)                            Linux Programmer's Manual                           MEMCPY(3)

NAME
       memcpy - copy memory area

SYNOPSIS
       #include <string.h>

       void *memcpy(void *dest, const void *src, size_t n);

DESCRIPTION
       The  memcpy() function copies n bytes from memory area src to memory area dest.  The memory
       areas must not overlap.  Use memmove(3) if the memory areas do overlap.

        memcpy()関数は、n バイトをメモリ領域 src からメモリ領域 dest にコピーする。
         メモリ領域は重なってはならない。 メモリ領域が重なる場合は memmove(3) を使用する。

RETURN VALUE
       The memcpy() function returns a pointer to dest.

ATTRIBUTES
       For an explanation of the terms used in this section, see attributes(7).

       ┌──────────┬───────────────┬─────────┐
       │Interface │ Attribute     │ Value   │
       ├──────────┼───────────────┼─────────┤
       │memcpy()  │ Thread safety │ MT-Safe │
       └──────────┴───────────────┴─────────┘
CONFORMING TO
       POSIX.1-2001, POSIX.1-2008, C89, C99, SVr4, 4.3BSD.

NOTES
       Failure to observe the requirement that the memory areas do not overlap has been the source
       of  significant bugs.  (POSIX and the C standards are explicit that employing memcpy() with
       overlapping areas produces undefined behavior.)  Most notably, in glibc 2.13 a  performance
       optimization  of  memcpy() on some platforms (including x86-64) included changing the order
       in which bytes were copied from src to dest.

       メモリ領域が重ならないという要件を守らないことが、重大なバグの原因となってきた。
       (POSIXとC標準は、領域が重複するmemcpy()を使用すると未定義の動作になることを明示している)。
       最も顕著なのは、glibc 2.13において、いくつかのプラットフォーム(x86-64を含む)での
       memcpy()のパフォーマンス最適化のために、srcからdestへのバイトのコピー順序が変更されたことである。

       This change revealed breakages in a number of  applications  that  performed  copying  with
       overlapping  areas.   Under  the previous implementation, the order in which the bytes were
       copied had fortuitously hidden the bug, which was revealed when the copying order  was  re‐
       versed.   In  glibc  2.14,  a  versioned symbol was added so that old binaries (i.e., those
       linked against glibc versions earlier than 2.14) employed a  memcpy()  implementation  that
       safely  handles  the overlapping buffers case (by providing an "older" memcpy() implementa‐
       tion that was aliased to memmove(3)).

       この変更により、オーバーラップする領域でコピーを行う多くのアプリケーションで破損が発生することが明らかになった。
       以前の実装では、バイトがコピーされる順番によって偶然にもバグが隠されていたが、
       コピーの順番を逆にしたときにバグが明らかになった。
       glibc 2.14 では、(memmove(3) にエイリアスされた 「古い」 memcpy() 実装を提供することにより)
       古いバイナリ (すなわち、2.14 より前のバージョンの glibc に対してリンクされたもの) が
       オーバーラップバッファのケースを安全に扱う memcpy() 実装を採用するように、
       バージョン管理されたシンボルが追加されました。

SEE ALSO
       bcopy(3), bstring(3), memccpy(3), memmove(3), mempcpy(3), strcpy(3), strncpy(3), wmemcpy(3)

COLOPHON
       This page is part of release 5.10 of the Linux man-pages project.   A  description  of  the
       project,  information  about  reporting  bugs,  and the latest version of this page, can be
       found at https://www.kernel.org/doc/man-pages/.

                                            2017-09-15                                   MEMCPY(3)
